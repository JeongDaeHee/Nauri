#include <stdio.h>
#include <winsock2.h>
#pragma comment (lib, "ws2_32.lib")
#include <stdlib.h>
#include <time.h>

int main()
{
	WSADATA wsa;
	WSAStartup(MAKEWORD(2,2), &wsa);
	srand(time(NULL));



	/* 소켓 핸들 */
	SOCKET s;
	s = socket(AF_INET, SOCK_STREAM, 0);
	if(s == INVALID_SOCKET)
	{
		printf("socket error!\n");
		return -1;
	}

	/* 네트워크 주소 결합 */
	int error = 0;
	SOCKADDR_IN srvAddr;
	memset(&srvAddr, 0, sizeof(srvAddr));


	srvAddr.sin_family = AF_INET;
	srvAddr.sin_port = htons(12345);
	srvAddr.sin_addr.s_addr = inet_addr("192.168.2.128");

	error =	bind(s, (SOCKADDR *)&srvAddr, sizeof(srvAddr));
	if(error == SOCKET_ERROR)
	{
		printf("bind error!\n");
		return -1;
	}

	/* 포트 열기 */
	error = listen(s, SOMAXCONN);
	if(error == SOCKET_ERROR)
	{
		printf("listen error!\n");
		return -1;
	}
	
	/* 연결 허용 */
	SOCKADDR_IN cltAddr;
	memset(&cltAddr, 0, sizeof(cltAddr));
	int cltlen = sizeof(cltAddr);
	SOCKET clts;

	clts = accept(s, (SOCKADDR*)&cltAddr, &cltlen);
	if(clts == INVALID_SOCKET)
	{
		printf("accept error!\n");
		return -1;
	}

	/* 데이터 수신 */
	int an[3];
	int cl[3];
	int i,j,size;
	int st = 0, ball = 0;
	int check = 0;
	int flag = 0;
	char inform[100];

	/*랜덤 숫자 3개 중복검사*/

	while(1){

		for( i = 0 ; i <3 ; i++){
		an[i] = rand()%9+1;
		}

		
		for(i=0 ; i < 2 ; i++)
		{
			for(j = i+1 ; j < 3 ; j++)
			{
				if(an[i] == an[j])
					check++;				
			}
		}

		if(check == 0)
			break;

	}


	for(i = 0 ; i < 3 ; i++)
	{
		printf("%d\t" , an[i]);
	}


	while(flag == 0){

	st = 0;
	ball = 0;


		/*숫자 받기 */
	for(i = 0; i<3 ; i++)
	{
		size = recv(clts , (char*)(&cl[i]) , sizeof(int),0);
	}



	/*스트라이크 개수 */
	for(i=0 ; i<3 ; i++)
	{
		if(an[i] == cl[i])
			st++;

	}

	/* ball 개수 */
	for(i=0 ; i<3 ; i++)
	{
		for(j=0 ; j<3 ; j++)
		{
			if(an[i] == cl[j])
				ball++;
		}
	}

	/*볼은 스트라이크를 포함하기 때문에 빼주기 */
	ball = ball - st;

	if(st == 3)
		flag = 1;

	sprintf(inform , "%d strike , %d ball",st,ball);
	

	size = send(clts , inform , strlen(inform) , 0);
	
	}






	/* 소켓 종료 */
	closesocket(clts);
	closesocket(s);
	WSACleanup();
	return 0;


}
