#include <stdio.h>
#include <winsock2.h>
#pragma comment (lib, "ws2_32.lib")
#include <stdlib.h>
#include <time.h>
#include <conio.h>

int main()
{
	WSADATA wsa;
	WSAStartup(MAKEWORD(2,2), &wsa);
	srand(time(NULL));



	/* 소켓 핸들 */
	SOCKET s;
	s = socket(AF_INET, SOCK_STREAM, 0);
	if(s == INVALID_SOCKET)
	{
		printf("socket error!\n");
		return -1;
	}

	/* 네트워크 주소 결합 */
	int error = 0;
	SOCKADDR_IN srvAddr;
	memset(&srvAddr, 0, sizeof(srvAddr));


	srvAddr.sin_family = AF_INET;
	srvAddr.sin_port = htons(12345);
	srvAddr.sin_addr.s_addr = inet_addr("192.168.2.128");

	error =	bind(s, (SOCKADDR *)&srvAddr, sizeof(srvAddr));
	if(error == SOCKET_ERROR)
	{
		printf("bind error!\n");
		return -1;
	}

	/* 포트 열기 */
	error = listen(s, SOMAXCONN);
	if(error == SOCKET_ERROR)
	{
		printf("listen error!\n");
		return -1;
	}
	
	/* 연결 허용 */
	SOCKADDR_IN cltAddr;
	memset(&cltAddr, 0, sizeof(cltAddr));
	int cltlen = sizeof(cltAddr);
	SOCKET clts;

	clts = accept(s, (SOCKADDR*)&cltAddr, &cltlen);
	if(clts == INVALID_SOCKET)
	{
		printf("accept error!\n");
		return -1;
	}

	
	char order[10];
	char addr[20];
	char* buf;
	int size,fsize;
	FILE* fp;


	while(1)
	{
		memset(order , 0 , sizeof(order));
	memset(addr , 0 , sizeof(addr));

	size = recv(clts , order , sizeof(order) , 0);
	printf("받은 명령어 : %s\n",order);

	if(!strcmp(order,"get"))
	{
		printf("파일 가져가는 중....\n");
	size = recv(clts , addr , sizeof(addr) , 0);

	fp = fopen(addr,"rb");			//보내기 위한 읽기
	fseek(fp , 0 , SEEK_END);
	fsize = ftell(fp);
	size = send(clts , (char*)&fsize , sizeof(fsize) , 0); // 크기보내기
	buf = (char*)malloc(fsize);
	fseek(fp , 0 , SEEK_SET);
	fread(buf , 1 ,fsize ,fp);
	
	size = send(clts ,buf ,fsize , 0);  // 파일 보내기 

	fclose(fp);

	}


	if(!strcmp(order,"put"))
	{
		printf("파일 업로드 중....\n");
		size = recv(clts , addr , sizeof(addr) , 0);

		size = recv(clts , (char*)&fsize , sizeof(fsize) , 0);
		buf = (char*)malloc(fsize);

		fp = fopen(addr , "wb");

		size = recv(clts , buf , fsize , 0);
		fwrite(buf , 1 , fsize , fp);
		fclose(fp);
		free(buf);

	}

	if(strstr(order,"dir"))
	{
       
		fp = _popen(order,"wt");
		
		fseek(fp , 0 , SEEK_END);
		fsize = ftell(fp);
		size = send(clts , (char*)&fsize , sizeof(fsize), 0);
		buf = (char*)malloc(fsize);
		fseek(fp , 0 , SEEK_SET);
		fread(buf , 1 , fsize , fp);
		size = send(clts , buf , fsize , 0);
		

		fclose(fp);
		continue;
		
	}



	}

	/* 소켓 종료 */
	closesocket(clts);
	closesocket(s);
	WSACleanup();
	return 0;


}
