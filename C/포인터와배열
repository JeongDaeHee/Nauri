포인터와 배열은 밀접한 관련이 있다.

배열의 배열명은 포인터 변수와 같이 쓰이고

포인터의 값을 증가하는 것은 배열의 index를

증가시키는 것과 같다.


포인터와 배열 예제 1

#include <stdio.h>

void main()
{
 int a[5] = {10,20,30,40,50};
 int i, *pa;
 pa = a;

 for(i=0;i<5;i++)
 {
  printf("배열의 주소 %d, 배열의 값 %d\n",pa+i,*(pa+i));
 }
}

위의 예제는 포인터 pa를 통해 배열에 접근하는 방법을 보여준다.

pa에 배열명 a를 넣어 배열의 첫번째 주소값을 pa에 넣고

pa+i연산을 통해 배열에 접근한다.

----------------------------------------------------------------------

포인터와 배열 예제 2

#include <stdio.h>

void main()
{
 int a =10, b[5] = {1,2,3,4,5},*p;
 p = &a;
 printf("(1) a = %d, *p = %d\n",a,*p);
 p = b;
 printf("(2) a = %d, *p = %d, *(p+1) = %d\n",a,*p,*(p+1));
 (*p)++;
 printf("(3) a = %d, *p = %d, *(p+1) = %d\n",a,*p,*(p+1));
 
}

포인터가 a를 가르킬 때에는 10을 나타낸다. 

p가 배열의 이름 b를 가르키면서 *p는 배열의 첫번째 값을 가지고

*(p+1)은 배열의 두번째 값을 나타낸다

하지만 포인터 연산자를 포함해 괄호를 한 후

(*p)++ 다음과 같이 증감 연산자를 하면 배열의 첫번째 값을 1증가시킨다

따라서 (3)의 *p값은 2가 된다.

---------------------------------------------------------------

※Call-by-value

#include <stdio.h>
#include <string.h>
void ex_func(int,int);

void main()
{
 int ma=100,mb=200;
 ex_func(ma,mb);
 printf("값2 : %d %d\n",ma,mb);
 
}

void ex_func(int sa,int sb){
 sa += 5;
 sb += 5;
 printf("값1 : %d %d\n",sa,sb);
}

함수에서 값을 증가시킨후 적용하려고 하면 함수에서 이미

변수는 처리 후에 없어져 버리기 때문에

실제 main에서의 변수에 영향을 미칠 수 없다.

다음과 같은 값에 의한 호출을 call-by-value라고 한다.

--------------------------------------------------------

※Call-by-reference

#include <stdio.h>
#include <string.h>
void int_swap(int *x,int *y);

void main()
{
 int a=100,b=200;
 printf("교환 전 : a = %d, b = %d\n",a,b);
 int_swap(&a,&b);
 printf("교환 후 : a = %d, b = %d\n",a,b);
 
}

void int_swap(int *x,int *y){
 int temp;
 temp = *x;
 *x = *y;
 *y = temp;
}



실제 main에 있는 변수에 영향을 미치기 위해서는 실제 main의

변수에 포함된 주소값을 사용하면 영향을 미칠 수 있다.

따라서 함수의 매개변수에 포인터형 변수를 선언하고

실제 main함수에서는 변수의 주소값을 넣어주면 함수를 통해

main함수의 변수에 변화를 줄 수 있다.

-------------------------------------------------------------

포인터와 배열 예제 3

#include <stdio.h>
#include <string.h>
void convertToUppercase(char *s);

void main()
{
 char string[]="characters";

 printf("변환 전의 스트링 : %s\n",string);
 convertToUppercase(string);
 printf("변환 후의 스트링 : %s\n",string);

}

void convertToUppercase(char *s)
{
 while(*s != '\0')
 {
  if(*s >='a' && *s<='z')
   *s = *s -32;
  ++s;
 }
}

다음 예제는 char형 배열의 소문자를 대문자로 바꿔주는 함수이다.

함수에서 main에 있는 배열에 접근하기 위해서는

배열명을 사용하여 접근하고 함수 내에서의 선언은

포인터형으로 선언해야 알 수 있다.

------------------------------------------------------------

포인터와 배열 예제 4

#include <stdio.h>
#include <string.h>
void maxf(int n1,int n2,int *max);

void main()
{
 int num1,num2,max;
 scanf("%d%d",&num1,&num2);
 maxf(num1,num2,&max);
 printf("max = %d\n",max);
}

void maxf(int n1,int n2,int *max)
{
 (n1>n2)?(*max=n1):(*max=n2);
}

위의 함수 또한 return 대신 함수 내에서 주소값을 참조해

main함수 내의 변수의 값을 변환하는 방식을 사용한다.

즉, call-by-reference이다.
